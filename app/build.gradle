/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // Gson for JSON parsing
    implementation 'com.google.code.gson:gson:2.10.1'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    finalizedBy jacocoTestReport // test 실행 후 자동으로 coverage 리포트 생성
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test // test가 먼저 실행되도록
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0 // 최소 커버리지 (필요시 조정)
            }
        }
    }
}

// 실행 가능한 JAR 파일 생성 설정
jar {
    manifest {
        attributes(
            'Main-Class': 'App',
            'Implementation-Title': 'Tetris Game',
            'Implementation-Version': '1.0'
        )
    }
    // 모든 의존성을 포함한 fat JAR 생성
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
